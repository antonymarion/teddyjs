function main(){"use strict";window.getContentHeight=function(){return window.innerHeight-64},window.getContentWidth=function(){return document.querySelector("core-drawer-panel").narrow?window.innerWidth:window.innerWidth-256};var a=new THREE.Scene,b=new THREE.PerspectiveCamera(70,window.getContentWidth()/window.getContentHeight(),1,1e3);b.position.z=8,a.add(b);var c=new THREE.DirectionalLight(16777215);c.position.set(1,.5,1),a.add(c);var d=new THREE.DirectionalLight(3355494);d.position.set(-1,-.5,-1),a.add(d);var e=new THREE.AmbientLight(3355443);a.add(e);var f=new THREE.WebGLRenderer({antialias:!0});f.setSize(window.getContentWidth(),window.getContentHeight()),f.setClearColor(1713022),f.sortObjects=!1,document.querySelector("content").appendChild(f.domElement),function g(){window.requestAnimationFrame(g),f.render(a,b)}(),Teddy.UI.setup(a,f,b),window.addEventListener("resize",function(){f.setSize(window.getContentWidth(),window.getContentHeight()),b.aspect=window.getContentWidth()/window.getContentHeight(),b.updateProjectionMatrix()},!1)}!function(a){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=a();else if("function"==typeof define&&define.amd)define([],a);else{var b;"undefined"!=typeof window?b=window:"undefined"!=typeof global?b=global:"undefined"!=typeof self&&(b=self),b.hull=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i="function"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error("Cannot find module '"+g+"'");throw j.code="MODULE_NOT_FOUND",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f="function"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b){function c(a){var b=[];a.forEach(function(a){var c=this.point2CellXY(a),d=c[0],e=c[1];void 0===b[d]&&(b[d]=[]),void 0===b[d][e]&&(b[d][e]=[]),b[d][e].push(a)},this),this.cellPoints=function(a,c){return void 0!==b[a]&&void 0!==b[a][c]?b[a][c]:[]},this.removePoint=function(a){for(var c,d=this.point2CellXY(a),e=b[d[0]][d[1]],f=0;f<e.length;f++)if(e[f][0]===a[0]&&e[f][1]===a[1]){c=f;break}return e.splice(c,1),e}}function d(a){return new c(a)}c.prototype={point2CellXY:function(a){var b=parseInt(a[0]/c.CELL_SIZE),d=parseInt(a[1]/c.CELL_SIZE);return[b,d]},rangePoints:function(a){for(var b=this.point2CellXY([a[0],a[1]]),c=this.point2CellXY([a[2],a[3]]),d=[],e=b[0];e<=c[0];e++)for(var f=b[1];f<=c[1];f++)d=d.concat(this.cellPoints(e,f));return d},addBorder2Bbox:function(a,b){return[a[0]-b*c.CELL_SIZE,a[1]-b*c.CELL_SIZE,a[2]+b*c.CELL_SIZE,a[3]+b*c.CELL_SIZE]}},c.CELL_SIZE=10,b.exports=d},{}],2:[function(a,b){"use strict";function c(a){return a.sort(function(a,b){return a[0]==b[0]?a[1]-b[1]:a[0]-b[0]})}function d(a){for(var b=-1/0,c=a.length-1;c>=0;c--)a[c][1]>b&&(b=a[c][1]);return b}function e(a){for(var b=[],c=0;c<a.length;c++){for(;b.length>=2&&g(b[b.length-2],b[b.length-1],a[c])<=0;)b.pop();b.push(a[c])}return b.pop(),b}function f(a){for(var b=a.reverse(),c=[],d=0;d<b.length;d++){for(;c.length>=2&&g(c[c.length-2],c[c.length-1],b[d])<=0;)c.pop();c.push(b[d])}return c.pop(),c}function g(a,b,c){return(b[0]-a[0])*(c[1]-a[1])-(b[1]-a[1])*(c[0]-a[0])}function h(a,b){return Math.pow(b[0]-a[0],2)+Math.pow(b[1]-a[1],2)}function i(a,b,c){var d=[b[0]-a[0],b[1]-a[1]],e=[c[0]-a[0],c[1]-a[1]],f=h(a,b),g=h(a,c),i=d[0]*e[0]+d[1]*e[1];return i/Math.sqrt(f*g)}function j(a,b){for(var c=0;c<b.length-1;c++){var d=[b[c],b[c+1]];if(!(a[0][0]===d[0][0]&&a[0][1]===d[0][1]||a[0][0]===d[1][0]&&a[0][1]===d[1][1])&&o(a,d))return!0}return!1}function k(a,b){var c,d,e,f;return a[0][0]<a[1][0]?(c=a[0][0]-b,d=a[1][0]+b):(c=a[1][0]-b,d=a[0][0]+b),a[0][1]<a[1][1]?(e=a[0][1]-b,f=a[1][1]+b):(e=a[1][1]-b,f=a[0][1]+b),[c,e,d,f]}function l(a,b,c){for(var d,e,f=null,g=q,h=q,k=0;k<b.length;k++)d=i(a[0],a[1],b[k]),e=i(a[1],a[0],b[k]),d>g&&e>h&&!j([a[0],b[k]],c)&&!j([a[1],b[k]],c)&&(g=d,h=e,f=b[k]);return f}function m(a,b,c,d){for(var e,f,g,i,j,n=!1,o=0;o<a.length-1;o++)if(e=[a[o],a[o+1]],!(h(e[0],e[1])<b)){f=0,g=r,j=k(e,g);do j=d.addBorder2Bbox(j,f),g=j[2]-j[0],i=l(e,d.rangePoints(j),a),f++;while(null===i&&c>g);null!==i&&(a.splice(o+1,0,i),d.removePoint(i),n=!0)}return n?m(a,b,c,d):a}function n(a,b){var g,h,i,j,k,l=b||20;return a.length<4?a:(a=c(a),h=e(a),g=f(a),i=g.concat(h),i.push(a[0]),k=Math.max(a[a.length-1][0],d(i))*s,j=a.filter(function(a){return i.indexOf(a)<0}),m(i,Math.pow(l,2),k,p(j)))}var o=a("./intersect.js"),p=a("./grid.js"),q=Math.cos(90/(180/Math.PI)),r=5,s=.8;b.exports=n},{"./grid.js":1,"./intersect.js":3}],3:[function(a,b){function c(a,b,c,d,e,f){var g=(f-b)*(c-a)-(d-b)*(e-a);return g>0?!0:0>g?!1:!0}function d(a,b){var d=a[0][0],e=a[0][1],f=a[1][0],g=a[1][1],h=b[0][0],i=b[0][1],j=b[1][0],k=b[1][1];return c(d,e,h,i,j,k)!==c(f,g,h,i,j,k)&&c(d,e,f,g,h,i)!==c(d,e,f,g,j,k)}b.exports=d},{}]},{},[2])(2)}),THREE.OBJExporter=function(){},THREE.OBJExporter.prototype={constructor:THREE.OBJExporter,parse:function(a,b){void 0===b&&(b=1);for(var c="",d=0,e=a.vertices.length;e>d;d++){var f=a.vertices[d];c+="v "+f.x*b+" "+f.y*b+" "+f.z*b+"\n"}for(var d=0,e=a.faceVertexUvs[0].length;e>d;d++)for(var g=a.faceVertexUvs[0][d],h=0;h<g.length;h++){var i=g[h];c+="vt "+i.x+" "+i.y+"\n"}for(var d=0,e=a.faces.length;e>d;d++)for(var j=a.faces[d].vertexNormals,h=0;h<j.length;h++){var k=j[h];c+="vn "+k.x+" "+k.y+" "+k.z+"\n"}for(var d=0,h=1,e=a.faces.length;e>d;d++,h+=3){var l=a.faces[d];c+="f ",c+=l.a+1+"/"+h+"/"+h+" ",c+=l.b+1+"/"+(h+1)+"/"+(h+1)+" ",c+=l.c+1+"/"+(h+2)+"/"+(h+2)+"\n"}return c}},CSG=function(){this.polygons=[]},CSG.fromPolygons=function(a){var b=new CSG;return b.polygons=a,b},CSG.prototype={clone:function(){var a=new CSG;return a.polygons=this.polygons.map(function(a){return a.clone()}),a},toPolygons:function(){return this.polygons},union:function(a){var b=new CSG.Node(this.clone().polygons),c=new CSG.Node(a.clone().polygons);return b.clipTo(c),c.clipTo(b),c.invert(),c.clipTo(b),c.invert(),b.build(c.allPolygons()),CSG.fromPolygons(b.allPolygons())},subtract:function(a){var b=new CSG.Node(this.clone().polygons),c=new CSG.Node(a.clone().polygons);return b.invert(),b.clipTo(c),c.clipTo(b),c.invert(),c.clipTo(b),c.invert(),b.build(c.allPolygons()),b.invert(),CSG.fromPolygons(b.allPolygons())},intersect:function(a){var b=new CSG.Node(this.clone().polygons),c=new CSG.Node(a.clone().polygons);return b.invert(),c.clipTo(b),c.invert(),b.clipTo(c),c.clipTo(b),b.build(c.allPolygons()),b.invert(),CSG.fromPolygons(b.allPolygons())},inverse:function(){var a=this.clone();return a.polygons.map(function(a){a.flip()}),a}},CSG.cube=function(a){a=a||{};var b=new CSG.Vector(a.center||[0,0,0]),c=a.radius?a.radius.length?a.radius:[a.radius,a.radius,a.radius]:[1,1,1];return CSG.fromPolygons([[[0,4,6,2],[-1,0,0]],[[1,3,7,5],[1,0,0]],[[0,1,5,4],[0,-1,0]],[[2,6,7,3],[0,1,0]],[[0,2,3,1],[0,0,-1]],[[4,5,7,6],[0,0,1]]].map(function(a){return new CSG.Polygon(a[0].map(function(d){var e=new CSG.Vector(b.x+c[0]*(2*!!(1&d)-1),b.y+c[1]*(2*!!(2&d)-1),b.z+c[2]*(2*!!(4&d)-1));return new CSG.Vertex(e,new CSG.Vector(a[1]))}))}))},CSG.sphere=function(a){function b(a,b){a*=2*Math.PI,b*=Math.PI;var f=new CSG.Vector(Math.cos(a)*Math.sin(b),Math.cos(b),Math.sin(a)*Math.sin(b));c.push(new CSG.Vertex(d.plus(f.times(e)),f))}a=a||{};for(var c,d=new CSG.Vector(a.center||[0,0,0]),e=a.radius||1,f=a.slices||16,g=a.stacks||8,h=[],i=0;f>i;i++)for(var j=0;g>j;j++)c=[],b(i/f,j/g),j>0&&b((i+1)/f,j/g),g-1>j&&b((i+1)/f,(j+1)/g),b(i/f,(j+1)/g),h.push(new CSG.Polygon(c));return CSG.fromPolygons(h)},CSG.cylinder=function(a){function b(a,b,d){var g=b*Math.PI*2,i=j.times(Math.cos(g)).plus(k.times(Math.sin(g))),l=c.plus(e.times(a)).plus(i.times(f)),m=i.times(1-Math.abs(d)).plus(h.times(d));return new CSG.Vertex(l,m)}a=a||{};for(var c=new CSG.Vector(a.start||[0,-1,0]),d=new CSG.Vector(a.end||[0,1,0]),e=d.minus(c),f=a.radius||1,g=a.slices||16,h=e.unit(),i=Math.abs(h.y)>.5,j=new CSG.Vector(i,!i,0).cross(h).unit(),k=j.cross(h).unit(),l=new CSG.Vertex(c,h.negated()),m=new CSG.Vertex(d,h.unit()),n=[],o=0;g>o;o++){var p=o/g,q=(o+1)/g;n.push(new CSG.Polygon([l,b(0,p,-1),b(0,q,-1)])),n.push(new CSG.Polygon([b(0,q,0),b(0,p,0),b(1,p,0),b(1,q,0)])),n.push(new CSG.Polygon([m,b(1,q,1),b(1,p,1)]))}return CSG.fromPolygons(n)},CSG.Vector=function(a,b,c){3==arguments.length?(this.x=a,this.y=b,this.z=c):"x"in a?(this.x=a.x,this.y=a.y,this.z=a.z):(this.x=a[0],this.y=a[1],this.z=a[2])},CSG.Vector.prototype={clone:function(){return new CSG.Vector(this.x,this.y,this.z)},negated:function(){return new CSG.Vector(-this.x,-this.y,-this.z)},plus:function(a){return new CSG.Vector(this.x+a.x,this.y+a.y,this.z+a.z)},minus:function(a){return new CSG.Vector(this.x-a.x,this.y-a.y,this.z-a.z)},times:function(a){return new CSG.Vector(this.x*a,this.y*a,this.z*a)},dividedBy:function(a){return new CSG.Vector(this.x/a,this.y/a,this.z/a)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lerp:function(a,b){return this.plus(a.minus(this).times(b))},length:function(){return Math.sqrt(this.dot(this))},unit:function(){return this.dividedBy(this.length())},cross:function(a){return new CSG.Vector(this.y*a.z-this.z*a.y,this.z*a.x-this.x*a.z,this.x*a.y-this.y*a.x)}},CSG.Vertex=function(a,b){this.pos=new CSG.Vector(a),this.normal=new CSG.Vector(b)},CSG.Vertex.prototype={clone:function(){return new CSG.Vertex(this.pos.clone(),this.normal.clone())},flip:function(){this.normal=this.normal.negated()},interpolate:function(a,b){return new CSG.Vertex(this.pos.lerp(a.pos,b),this.normal.lerp(a.normal,b))}},CSG.Plane=function(a,b){this.normal=a,this.w=b},CSG.Plane.EPSILON=1e-5,CSG.Plane.fromPoints=function(a,b,c){var d=b.minus(a).cross(c.minus(a)).unit();return new CSG.Plane(d,d.dot(a))},CSG.Plane.prototype={clone:function(){return new CSG.Plane(this.normal.clone(),this.w)},flip:function(){this.normal=this.normal.negated(),this.w=-this.w},splitPolygon:function(a,b,c,d,e){for(var f=0,g=1,h=2,i=3,j=0,k=[],l=0;l<a.vertices.length;l++){var m=this.normal.dot(a.vertices[l].pos)-this.w,n=m<-CSG.Plane.EPSILON?h:m>CSG.Plane.EPSILON?g:f;j|=n,k.push(n)}switch(j){case f:(this.normal.dot(a.plane.normal)>0?b:c).push(a);break;case g:d.push(a);break;case h:e.push(a);break;case i:for(var o=[],p=[],l=0;l<a.vertices.length;l++){var q=(l+1)%a.vertices.length,r=k[l],s=k[q],t=a.vertices[l],u=a.vertices[q];if(r!=h&&o.push(t),r!=g&&p.push(r!=h?t.clone():t),(r|s)==i){var m=(this.w-this.normal.dot(t.pos))/this.normal.dot(u.pos.minus(t.pos)),v=t.interpolate(u,m);o.push(v),p.push(v.clone())}}o.length>=3&&d.push(new CSG.Polygon(o,a.shared)),p.length>=3&&e.push(new CSG.Polygon(p,a.shared))}}},CSG.Polygon=function(a,b){this.vertices=a,this.shared=b,this.plane=CSG.Plane.fromPoints(a[0].pos,a[1].pos,a[2].pos)},CSG.Polygon.prototype={clone:function(){var a=this.vertices.map(function(a){return a.clone()});return new CSG.Polygon(a,this.shared)},flip:function(){this.vertices.reverse().map(function(a){a.flip()}),this.plane.flip()}},CSG.Node=function(a){this.plane=null,this.front=null,this.back=null,this.polygons=[],a&&this.build(a)},CSG.Node.prototype={clone:function(){var a=new CSG.Node;return a.plane=this.plane&&this.plane.clone(),a.front=this.front&&this.front.clone(),a.back=this.back&&this.back.clone(),a.polygons=this.polygons.map(function(a){return a.clone()}),a},invert:function(){for(var a=0;a<this.polygons.length;a++)this.polygons[a].flip();this.plane.flip(),this.front&&this.front.invert(),this.back&&this.back.invert();var b=this.front;this.front=this.back,this.back=b},clipPolygons:function(a){if(!this.plane)return a.slice();for(var b=[],c=[],d=0;d<a.length;d++)this.plane.splitPolygon(a[d],b,c,b,c);return this.front&&(b=this.front.clipPolygons(b)),c=this.back?this.back.clipPolygons(c):[],b.concat(c)},clipTo:function(a){this.polygons=a.clipPolygons(this.polygons),this.front&&this.front.clipTo(a),this.back&&this.back.clipTo(a)},allPolygons:function(){var a=this.polygons.slice();return this.front&&(a=a.concat(this.front.allPolygons())),this.back&&(a=a.concat(this.back.allPolygons())),a},build:function(a){if(a.length){this.plane||(this.plane=a[0].plane.clone());for(var b=[],c=[],d=0;d<a.length;d++)this.plane.splitPolygon(a[d],this.polygons,this.polygons,b,c);b.length&&(this.front||(this.front=new CSG.Node),this.front.build(b)),c.length&&(this.back||(this.back=new CSG.Node),this.back.build(c))}}},window.ThreeBSP=function(){var a,b=1e-5,c=0,d=1,e=2,f=3;return a=function(b){var c,d,e,f,g,h,i,j=[];if(b instanceof THREE.Geometry)this.matrix=new THREE.Matrix4;else{if(!(b instanceof THREE.Mesh)){if(b instanceof a.Node)return this.tree=b,this.matrix=new THREE.Matrix4,this;throw"ThreeBSP: Given geometry is unsupported"}b.updateMatrix(),this.matrix=b.matrix.clone(),b=b.geometry}for(c=0,d=b.faces.length;d>c;c++)e=b.faces[c],g=b.faceVertexUvs[0][c],i=new a.Polygon,f=b.vertices[e.a],h=g?new THREE.Vector2(g[0].x,g[0].y):null,f=new a.Vertex(f.x,f.y,f.z,e.vertexNormals[0],h),f.applyMatrix4(this.matrix),i.vertices.push(f),f=b.vertices[e.b],h=g?new THREE.Vector2(g[1].x,g[1].y):null,f=new a.Vertex(f.x,f.y,f.z,e.vertexNormals[2],h),f.applyMatrix4(this.matrix),i.vertices.push(f),f=b.vertices[e.c],h=g?new THREE.Vector2(g[2].x,g[2].y):null,f=new a.Vertex(f.x,f.y,f.z,e.vertexNormals[2],h),f.applyMatrix4(this.matrix),i.vertices.push(f),i.calculateProperties(),j.push(i);this.tree=new a.Node(j)},a.prototype.subtract=function(b){var c=this.tree.clone(),d=b.tree.clone();return c.invert(),c.clipTo(d),d.clipTo(c),d.invert(),d.clipTo(c),d.invert(),c.build(d.allPolygons()),c.invert(),c=new a(c),c.matrix=this.matrix,c},a.prototype.union=function(b){var c=this.tree.clone(),d=b.tree.clone();return c.clipTo(d),d.clipTo(c),d.invert(),d.clipTo(c),d.invert(),c.build(d.allPolygons()),c=new a(c),c.matrix=this.matrix,c},a.prototype.intersect=function(b){var c=this.tree.clone(),d=b.tree.clone();return c.invert(),d.clipTo(c),d.invert(),c.clipTo(d),d.clipTo(c),c.build(d.allPolygons()),c.invert(),c=new a(c),c.matrix=this.matrix,c},a.prototype.toGeometry=function(){var a,b,c,d,e,f,g,h,i,j,k=(new THREE.Matrix4).getInverse(this.matrix),l=new THREE.Geometry,m=this.tree.allPolygons(),n=m.length,o={};for(a=0;n>a;a++)for(c=m[a],d=c.vertices.length,b=2;d>b;b++)j=[],h=c.vertices[0],j.push(new THREE.Vector2(h.uv.x,h.uv.y)),h=new THREE.Vector3(h.x,h.y,h.z),h.applyMatrix4(k),"undefined"!=typeof o[h.x+","+h.y+","+h.z]?e=o[h.x+","+h.y+","+h.z]:(l.vertices.push(h),e=o[h.x+","+h.y+","+h.z]=l.vertices.length-1),h=c.vertices[b-1],j.push(new THREE.Vector2(h.uv.x,h.uv.y)),h=new THREE.Vector3(h.x,h.y,h.z),h.applyMatrix4(k),"undefined"!=typeof o[h.x+","+h.y+","+h.z]?f=o[h.x+","+h.y+","+h.z]:(l.vertices.push(h),f=o[h.x+","+h.y+","+h.z]=l.vertices.length-1),h=c.vertices[b],j.push(new THREE.Vector2(h.uv.x,h.uv.y)),h=new THREE.Vector3(h.x,h.y,h.z),h.applyMatrix4(k),"undefined"!=typeof o[h.x+","+h.y+","+h.z]?g=o[h.x+","+h.y+","+h.z]:(l.vertices.push(h),g=o[h.x+","+h.y+","+h.z]=l.vertices.length-1),i=new THREE.Face3(e,f,g,new THREE.Vector3(c.normal.x,c.normal.y,c.normal.z)),l.faces.push(i),l.faceVertexUvs[0].push(j);return l},a.prototype.toMesh=function(a){var b=this.toGeometry(),c=new THREE.Mesh(b,a);return c.position.setFromMatrixPosition(this.matrix),c.rotation.setFromRotationMatrix(this.matrix),c},a.Polygon=function(a){a instanceof Array||(a=[]),this.vertices=a,a.length>0?this.calculateProperties():this.normal=this.w=void 0},a.Polygon.prototype.calculateProperties=function(){var a=this.vertices[0],b=this.vertices[1],c=this.vertices[2];return this.normal=b.clone().subtract(a).cross(c.clone().subtract(a)).normalize(),this.w=this.normal.clone().dot(a),this},a.Polygon.prototype.clone=function(){var b,c,d=new a.Polygon;for(b=0,c=this.vertices.length;c>b;b++)d.vertices.push(this.vertices[b].clone());return d.calculateProperties(),d},a.Polygon.prototype.flip=function(){var a,b=[];for(this.normal.multiplyScalar(-1),this.w*=-1,a=this.vertices.length-1;a>=0;a--)b.push(this.vertices[a]);return this.vertices=b,this},a.Polygon.prototype.classifyVertex=function(a){var f=this.normal.dot(a)-this.w;return-b>f?e:f>b?d:c},a.Polygon.prototype.classifySide=function(a){var b,g,h,i=0,j=0,k=a.vertices.length;for(b=0;k>b;b++)g=a.vertices[b],h=this.classifyVertex(g),h===d?i++:h===e&&j++;return i>0&&0===j?d:0===i&&j>0?e:0===i&&0===j?c:f},a.Polygon.prototype.splitPolygon=function(b,g,h,i,j){var k=this.classifySide(b);if(k===c)(this.normal.dot(b.normal)>0?g:h).push(b);else if(k===d)i.push(b);else if(k===e)j.push(b);else{var l,m,n,o,p,q,r,s,t,u=[],v=[];for(m=0,l=b.vertices.length;l>m;m++)n=(m+1)%l,q=b.vertices[m],r=b.vertices[n],o=this.classifyVertex(q),p=this.classifyVertex(r),o!=e&&u.push(q),o!=d&&v.push(q),(o|p)===f&&(s=(this.w-this.normal.dot(q))/this.normal.dot(r.clone().subtract(q)),t=q.interpolate(r,s),u.push(t),v.push(t));u.length>=3&&i.push(new a.Polygon(u).calculateProperties()),v.length>=3&&j.push(new a.Polygon(v).calculateProperties())}},a.Vertex=function(a,b,c,d,e){this.x=a,this.y=b,this.z=c,this.normal=d||new THREE.Vector3,this.normal instanceof THREE.Vector3||(this.normal=(new THREE.Vector3).copy(this.normal)),this.uv=e||new THREE.Vector2,this.uv instanceof THREE.Vector2||(this.uv=(new THREE.Vector2).copy(this.uv))},a.Vertex.prototype.clone=function(){return new a.Vertex(this.x,this.y,this.z,this.normal.clone(),this.uv.clone())},a.Vertex.prototype.add=function(a){return this.x+=a.x,this.y+=a.y,this.z+=a.z,this},a.Vertex.prototype.subtract=function(a){return this.x-=a.x,this.y-=a.y,this.z-=a.z,this},a.Vertex.prototype.multiplyScalar=function(a){return this.x*=a,this.y*=a,this.z*=a,this},a.Vertex.prototype.cross=function(a){var b=this.x,c=this.y,d=this.z;return this.x=c*a.z-d*a.y,this.y=d*a.x-b*a.z,this.z=b*a.y-c*a.x,this},a.Vertex.prototype.normalize=function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);return this.x/=a,this.y/=a,this.z/=a,this},a.Vertex.prototype.dot=function(a){return this.x*a.x+this.y*a.y+this.z*a.z},a.Vertex.prototype.lerp=function(a,b){return this.add(a.clone().subtract(this).multiplyScalar(b)),this.normal.add(a.normal.clone().sub(this.normal).multiplyScalar(b)),this.uv.add(a.uv.clone().sub(this.uv).multiplyScalar(b)),this},a.Vertex.prototype.interpolate=function(a,b){return this.clone().lerp(a,b)},a.Vertex.prototype.applyMatrix4=function(a){var b=this.x,c=this.y,d=this.z,e=a.elements;return this.x=e[0]*b+e[4]*c+e[8]*d+e[12],this.y=e[1]*b+e[5]*c+e[9]*d+e[13],this.z=e[2]*b+e[6]*c+e[10]*d+e[14],this},a.Node=function(b){var c,d,e=[],f=[];if(this.polygons=[],this.front=this.back=void 0,b instanceof Array&&0!==b.length){for(this.divider=b[0].clone(),c=0,d=b.length;d>c;c++)this.divider.splitPolygon(b[c],this.polygons,this.polygons,e,f);e.length>0&&(this.front=new a.Node(e)),f.length>0&&(this.back=new a.Node(f))}},a.Node.isConvex=function(a){var b,c;for(b=0;b<a.length;b++)for(c=0;c<a.length;c++)if(b!==c&&a[b].classifySide(a[c])!==e)return!1;return!0},a.Node.prototype.build=function(b){var c,d,e=[],f=[];for(this.divider||(this.divider=b[0].clone()),c=0,d=b.length;d>c;c++)this.divider.splitPolygon(b[c],this.polygons,this.polygons,e,f);e.length>0&&(this.front||(this.front=new a.Node),this.front.build(e)),f.length>0&&(this.back||(this.back=new a.Node),this.back.build(f))},a.Node.prototype.allPolygons=function(){var a=this.polygons.slice();return this.front&&(a=a.concat(this.front.allPolygons())),this.back&&(a=a.concat(this.back.allPolygons())),a},a.Node.prototype.clone=function(){var b=new a.Node;return b.divider=this.divider.clone(),b.polygons=this.polygons.map(function(a){return a.clone()}),b.front=this.front&&this.front.clone(),b.back=this.back&&this.back.clone(),b},a.Node.prototype.invert=function(){var a,b,c;for(a=0,b=this.polygons.length;b>a;a++)this.polygons[a].flip();return this.divider.flip(),this.front&&this.front.invert(),this.back&&this.back.invert(),c=this.front,this.front=this.back,this.back=c,this},a.Node.prototype.clipPolygons=function(a){var b,c,d,e;if(!this.divider)return a.slice();for(d=[],e=[],b=0,c=a.length;c>b;b++)this.divider.splitPolygon(a[b],d,e,d,e);return this.front&&(d=this.front.clipPolygons(d)),e=this.back?this.back.clipPolygons(e):[],d.concat(e)},a.Node.prototype.clipTo=function(a){this.polygons=a.clipPolygons(this.polygons),this.front&&this.front.clipTo(a),this.back&&this.back.clipTo(a)},a}();var Teddy=Teddy||{};Teddy.DIST_THRESHOLD=.001,Teddy.Body=function(a,b){this.points=a||[],this.outlineSize=this.points.length,this.joints=[],this.triangles=[],this.spines=[],this.mesh=void 0,this.material=new THREE.MeshPhongMaterial({color:16777215,wireframe:b}),void 0===Teddy.Body.insntaces&&(Teddy.Body.instances=[]),Teddy.Body.instances.push(this)},Teddy.Body.prototype.onOutline=function(a){return a<this.outlineSize},Teddy.Body.prototype.isOutline=function(a,b){return this.onOutline(a)&&this.onOutline(b)&&(1===Math.abs(a-b)||Math.abs(a-b)===this.outlineSize-1)},Teddy.Body.prototype.getPointIndex=function(a,b,c){for(var d="undefined"==typeof b?a:new THREE.Vector3(a,b,c),e=0;e<this.points.length;e++)if(this.points[e].distanceTo(d)<Teddy.DIST_THRESHOLD)return e;return this.points.push(d),this.points.length-1},Teddy.Body.prototype.makeCCW=function(a,b){var c=this.points[a[0]],d=this.points[a[1]],e=this.points[a[2]],f=d.clone().sub(c),g=e.clone().sub(c);return b&&f.cross(g).z<0||!b&&f.cross(g).z>0?[a[0],a[2],a[1]]:a},Teddy.Body.prototype.getJoint=function(a){for(var b=0;b<this.joints.length;b++){var c=this.joints[b];if(c.pointIndex===a)return c}var d=new Teddy.Joint(this,a);return this.joints.push(d),d},Teddy.Body.prototype.triangulate=function(){var a=[],b={};this.points.forEach(function(c,d){b[c.x]||(b[c.x]={}),b[c.x][c.y]=d,a.push(new poly2tri.Point(c.x,c.y))});var c=new poly2tri.SweepContext(a);c.triangulate();var d=c.getTriangles();d.forEach(function(a){var c=a.points_;this.triangles.push([b[c[0].x][c[0].y],b[c[1].x][c[1].y],b[c[2].x][c[2].y]])},this)},Teddy.Body.prototype.retrieveSpines=function(){this.triangles.forEach(function(a){var b,c=a[0],d=a[1],e=a[2],f=this.points[c],g=this.points[d],h=this.points[e],i=new THREE.Vector3((f.x+g.x)/2,(f.y+g.y)/2,0),j=new THREE.Vector3((g.x+h.x)/2,(g.y+h.y)/2,0),k=new THREE.Vector3((h.x+f.x)/2,(h.y+f.y)/2,0),l=new THREE.Vector3((f.x+g.x+h.x)/3,(f.y+g.y+h.y)/3,0),m=function(a,b,c){var d=[];switch(this.isOutline(a,b)&&d.push([0,1]),this.isOutline(b,c)&&d.push([1,2]),this.isOutline(c,a)&&d.push([2,0]),d.length){case 0:return{type:"j",edges:d};case 1:return{type:"s",edges:d};case 2:return{type:"t",edges:d};default:throw"error"}}.bind(this)(c,d,e);switch(m.type){case"t":"0,1,1,2"===m.edges.toString()?(b=new Teddy.Spine(this,g,k),b.addTriangle({triangle:a,edges:m.edges,links:[[2,0]]}),this.addSpine(b)):"1,2,2,0"===m.edges.toString()?(b=new Teddy.Spine(this,h,i),b.addTriangle({triangle:a,edges:m.edges,links:[[0,1]]}),this.addSpine(b)):"0,1,2,0"===m.edges.toString()&&(b=new Teddy.Spine(this,f,j),b.addTriangle({triangle:a,edges:m.edges,links:[[1,2]]}),this.addSpine(b));break;case"s":"0,1"===m.edges.toString()?(b=new Teddy.Spine(this,j,k),b.addTriangle({triangle:a,edges:m.edges,links:[[1,2],[2,0]]}),this.addSpine(b)):"1,2"===m.edges.toString()?(b=new Teddy.Spine(this,k,i),b.addTriangle({triangle:a,edges:m.edges,links:[[2,0],[0,1]]}),this.addSpine(b)):"2,0"===m.edges.toString()&&(b=new Teddy.Spine(this,i,j),b.addTriangle({triangle:a,edges:m.edges,links:[[0,1],[1,2]]}),this.addSpine(b));break;case"j":var n=new Teddy.Spine(this,i,l);n.addTriangle({triangle:a,edges:m.edges,links:[[0,1],[1,2],[2,0]]}),this.addSpine(n);var o=new Teddy.Spine(this,j,l);o.addTriangle({triangle:a,edges:m.edges,links:[[0,1],[1,2],[2,0]]}),this.addSpine(o);var p=new Teddy.Spine(this,k,l);p.addTriangle({triangle:a,edges:m.edges,links:[[0,1],[1,2],[2,0]]}),this.addSpine(p)}},this)},Teddy.Body.prototype.addSpine=function(a){this.spines.push(a)},Teddy.Body.prototype.prunSpines=function(){var a=[];this.spines.forEach(function(b){if(b.isTerminal()){var c,d,e=b,f=e.joint1.isTerminal()?e.joint1:e.joint2,g=[],h=function(a){return this.points[a]}.bind(this),i=function(a){g.push(a)},j=function(a,b){return a===b?0:b>a?-1:1};do{a.push(e),f=e.getNextJoint(f);var k=e.getEdgeIdsIncluding(f.getPoint()),l=k.map(h),m=f.getPoint(),n=m.distanceTo(l[0]);e.getAllPointIdsWithoutIds(k).forEach(i,this);for(var o=0;o<g.length;o++){var p=this.points[g[o]];if(n<m.distanceTo(p)){for(g.push(k[0]),g.push(k[1]),g=g.sort(j),c=g.shift(),d=0;d<g.length+1&&(g.push(c),g[0]===c+1);d++)c=g.shift();for(d=1;d<g.length;d++)f.addTriangle(g[d-1],g[d],this.getPointIndex(m));return}}if(e=f.getSpinesExcept(e)[0],e.isJunction()){for(a.push(e),k.forEach(i),f=e.getNextJoint(f),m=f.getPoint(),g=g.sort(j),c=g.shift(),d=0;d<g.length+1&&(g.push(c),g[0]===c+1);d++)c=g.shift();for(d=1;d<g.length;d++)f.addTriangle(g[d-1],g[d],this.getPointIndex(m));return}if(e.isSleeve());else if(e.isTerminal())throw"ERROR: cannot handle this geometry"}while("undefined"!=typeof e)}},this),a.map(function(a){return this.spines.indexOf(a)},this).sort(function(a,b){return a===b?0:b>a?1:-1}).forEach(function(a){this.spines.splice(a,1)},this),this.spines.forEach(function(a){var b=a.triangles[0].triangle;a.triangles=[];var c=!0;if([[0,1,2],[1,2,0],[2,0,1]].forEach(function(d){var e=d[0],f=d[1],g=d[2];return this.isOutline(b[e],b[f])?(c=!1,a.joint1.addTriangle(b[e],b[f],a.joint1.pointIndex),a.triangles.push({triangle:[b[e],a.joint1.pointIndex,a.joint2.pointIndex]}),void a.triangles.push({triangle:[b[g],a.joint1.pointIndex,a.joint2.pointIndex]})):void 0},this),c){var d=this.points[b[0]],e=this.points[b[1]],f=this.points[b[2]],g=new THREE.Vector3((d.x+e.x+f.x)/3,(d.y+e.y+f.y)/3,(d.z+e.z+f.z)/3),h=a.joint1.getPoint(),i=a.joint2.getPoint(),j=h.distanceTo(g)<i.distanceTo(g)?[a.joint2,a.joint1]:[a.joint1,a.joint2],k=j[0],l=j[1],m=d.clone().add(e).multiplyScalar(.5).distanceTo(k.getPoint()),n=e.clone().add(f).multiplyScalar(.5).distanceTo(k.getPoint()),o=f.clone().add(d).multiplyScalar(.5).distanceTo(k.getPoint());if(n>=m&&o>=m)a.triangles.push({triangle:[b[0],k.pointIndex,l.pointIndex]}),a.triangles.push({triangle:[b[1],k.pointIndex,l.pointIndex]});else if(m>=n&&o>=n)a.triangles.push({triangle:[b[1],k.pointIndex,l.pointIndex]}),a.triangles.push({triangle:[b[2],k.pointIndex,l.pointIndex]});else{if(!(m>=o&&n>=o))throw"never reach";a.triangles.push({triangle:[b[2],k.pointIndex,l.pointIndex]}),a.triangles.push({triangle:[b[0],k.pointIndex,l.pointIndex]})}}},this)},Teddy.Body.prototype.elevateSpines=function(){this.spines.forEach(function(a){a.elevate()},this)},Teddy.Body.prototype.sewSkins=function(){this.spines.forEach(function(a){var b=[];if(a.elevatedTriangles.forEach(function(a){this.sewTriangle(a,b,!0)},this),a.droppedTriangles.forEach(function(a){this.sewTriangle(a,b,!1)},this),a.triangles=b,!a.joint1.triangulated){var c=[];a.joint1.elevatedTriangles.forEach(function(a){this.sewTriangle(a,c,!0)},this),a.joint1.droppedTriangles.forEach(function(a){this.sewTriangle(a,c,!1)},this),a.joint1.triangles=c,a.joint1.triangulated=!0}if(!a.joint2.triangulated){var d=[];a.joint2.elevatedTriangles.forEach(function(a){this.sewTriangle(a,d,!0)},this),a.joint2.droppedTriangles.forEach(function(a){this.sewTriangle(a,d,!1)},this),a.joint2.triangles=d,a.joint2.triangulated=!0}},this)},Teddy.Body.prototype.sewTriangle=function(a,b,c){var d=this.points[a[0]],e=this.points[a[1]],f=this.points[a[2]],g=[],h=[];(Math.abs(d.z)<1e-4?h:g).push(d),(Math.abs(e.z)<1e-4?h:g).push(e),(Math.abs(f.z)<1e-4?h:g).push(f);for(var i,j,k,l=[],m=g[0],n=h[0],o=m.z,p=n.clone().sub(m.clone().setZ(n.z)),q=p.length(),r=0;90>=r;r+=10)i=r/180*Math.PI,j=q*Math.cos(i),k=o*Math.sin(i),l.push(new THREE.Vector3(m.x+j/q*p.x,m.y+j/q*p.y,k));var s=[];for(m=g[g.length-1],n=h[h.length-1],o=m.z,p=n.clone().sub(m.clone().setZ(n.z)),q=p.length(),r=0;90>=r;r+=10)i=r/180*Math.PI,j=q*Math.cos(i),k=o*Math.sin(i),s.push(new THREE.Vector3(m.x+j/q*p.x,m.y+j/q*p.y,k));l[0].distanceTo(s[0])<1e-4&&(l=l.reverse(),s=s.reverse());var t=[];t.push(this.getPointIndex(l.pop())),s.pop(),t.push(this.getPointIndex(l[l.length-1])),t.push(this.getPointIndex(s[s.length-1])),b.push(this.makeCCW(t,c));for(var u=1;u<l.length;u++)b.push(this.makeCCW([this.getPointIndex(l[u-1]),this.getPointIndex(s[u-1]),this.getPointIndex(l[u])],c)),b.push(this.makeCCW([this.getPointIndex(s[u-1]),this.getPointIndex(s[u]),this.getPointIndex(l[u])],c))},Teddy.Body.prototype.buildMesh=function(){var a=new THREE.Geometry;this.points.forEach(function(b){a.vertices.push(b)},this),this.spines.forEach(function(b){b.triangles.forEach(function(b){a.faces.push(new THREE.Face3(b[0],b[1],b[2]))},this),b.joint1.triangles.forEach(function(b){a.faces.push(new THREE.Face3(b[0],b[1],b[2]))},this),b.joint2.triangles.forEach(function(b){a.faces.push(new THREE.Face3(b[0],b[1],b[2]))},this)},this),a.computeFaceNormals(),a.computeVertexNormals(),this.mesh=new THREE.Mesh(a,new THREE.MeshPhongMaterial({color:16777215,wireframe:!1})),this.mesh.userData.teddy=this},Teddy.Body.prototype.smoothMesh=function(){if("undefined"!=typeof this.mesh){var a={},b=this.mesh.geometry;b.faces.forEach(function(b){"undefined"==typeof a[b.a]&&(a[b.a]=[]),"undefined"==typeof a[b.b]&&(a[b.b]=[]),"undefined"==typeof a[b.c]&&(a[b.c]=[]),a[b.a].push(b.b),a[b.a].push(b.c),a[b.b].push(b.c),a[b.b].push(b.a),a[b.c].push(b.a),a[b.c].push(b.b)},this),Object.keys(a).forEach(function(c){var d=a[c],e=new THREE.Vector3;d.forEach(function(a){e.add(b.vertices[a])},this),e.multiplyScalar(1/d.length),a[c]=e},this),Object.keys(a).forEach(function(c){b.vertices[c].copy(a[c])},this),b.computeFaceNormals(),b.computeVertexNormals()}},Teddy.Body.prototype.debugAddSpineMeshes=function(a){this.spines.forEach(function(b){var c=new THREE.Geometry;c.vertices.push(this.points[b.joint1.elevatedPointIndex]),c.vertices.push(this.points[b.joint2.elevatedPointIndex]);var d=new THREE.Line(c,new THREE.LineBasicMaterial({color:16711680,linewidth:4}));a.add(d)},this)},Teddy.Body.prototype.getMesh=function(){if(!this.mesh){this.triangulate(),this.retrieveSpines(),this.prunSpines(),this.elevateSpines(),this.sewSkins(),this.buildMesh();for(var a=0;5>a;a++)this.smoothMesh()}return this.mesh},Teddy.Body.prototype.getMeshAsync=function(a,b,c){if(this.mesh)a(this),c(this);else{var d=new Worker("scripts/teddy.worker.js");d.addEventListener("message",function(d){var e=new THREE.Geometry;if(d.data.status){var f=d.data.geometry;for(var g in f)"id"!==g&&"uuid"!==g&&(e[g]=f[g]);this.mesh=new THREE.Mesh(e,this.material),this.mesh.userData.teddy=this,a(this),c(this)}else b(d.data.error),c(this)}.bind(this)),d.postMessage(this.points)}},Teddy.Spine=function(a,b,c){this.body=a,b instanceof THREE.Vector3&&(b=this.body.getPointIndex(b)),c instanceof THREE.Vector3&&(c=this.body.getPointIndex(c)),"number"==typeof b&&(b=this.body.getJoint(b)),"number"==typeof c&&(c=this.body.getJoint(c)),this.joint1=b,this.joint1.addSpine(this),this.joint2=c,this.joint2.addSpine(this),this.triangles=[],this.elevatedTriangles=[],this.droppedTriangles=[]},Teddy.Spine.prototype.getEdgeIdsIncluding=function(a){var b=[];return this.triangles.forEach(function(c){var d=c.triangle;[[0,1],[1,2],[2,0]].forEach(function(c){var e=d[c[0]],f=d[c[1]],g=this.body.points[e],h=this.body.points[f],i=g.clone().add(h).multiplyScalar(.5);return i.distanceTo(a)<.01?(b.push(e),void b.push(f)):void 0},this)},this),b},Teddy.Spine.prototype.getNextJoint=function(a){return this.joint1===a?this.joint2:this.joint1},Teddy.Spine.prototype.isTerminal=function(){return this.joint1.isTerminal()||this.joint2.isTerminal()},Teddy.Spine.prototype.isSleeve=function(){return this.joint1.isSleeve()||this.joint2.isSleeve()},Teddy.Spine.prototype.isJunction=function(){return this.joint1.isJunction()||this.joint2.isJunction()},Teddy.Spine.prototype.addTriangle=function(a){this.triangles.push(a)},Teddy.Spine.prototype.getAllPointIds=function(){return this.getAllPointIdsWithoutIds([])},Teddy.Spine.prototype.getAllPointIdsWithoutIds=function(a){var b=[];return this.triangles.forEach(function(c){c.triangle.forEach(function(c){b.indexOf(c)<0&&a.indexOf(c)<0&&b.push(c)
})}),b},Teddy.Spine.prototype.elevate=function(){"undefined"!=typeof this.joint1&&this.joint1.elevate(),"undefined"!=typeof this.joint1&&this.joint2.elevate(),this.triangles.forEach(function(a){var b=[],c=[];a.triangle.forEach(function(a){a===this.joint1.pointIndex?(b.push(this.joint1.elevatedPointIndex),c.push(this.joint1.droppedPointIndex)):a===this.joint2.pointIndex?(b.push(this.joint2.elevatedPointIndex),c.push(this.joint2.droppedPointIndex)):(b.push(a),c.push(a))},this),this.elevatedTriangles.push(b),this.droppedTriangles.push(c)},this)},Teddy.Spine.prototype.isEqual=function(a){var b="undefined"==typeof this.joint1?-1:this.joint1.pointIndex,c="undefined"==typeof this.joint2?-1:this.joint2.pointIndex,d="undefined"==typeof a.joint1?-1:a.joint1.pointIndex,e="undefined"==typeof a.joint2?-1:a.joint2.pointIndex;return b===d&&c===e||b===e&&c===d},Teddy.Spine.prototype.toString=function(){var a="undefined"==typeof this.joint1?-1:this.joint1.pointIndex,b="undefined"==typeof this.joint2?-1:this.joint2.pointIndex;return""+a+","+b},Teddy.Joint=function(a,b){this.body=a,this.pointIndex=b,this.spines=[],this.triangles=[],this.elevatedPointIndex=void 0,this.droppedPointIndex=void 0,this.elevatedTriangles=[],this.droppedTriangles=[],this.elevated=!1,this.triangulated=!1},Teddy.Joint.prototype.getPoint=function(){return this.body.points[this.pointIndex]},Teddy.Joint.prototype.getElevatedPoint=function(){return this.body.points[this.elevatedPointIndex]},Teddy.Joint.prototype.getDroppedPoint=function(){return this.body.points[this.droppedPointIndex]},Teddy.Joint.prototype.addSpine=function(a){this.spines.indexOf(a)<0&&this.spines.push(a)},Teddy.Joint.prototype.getSpinesExcept=function(a){var b=[];return this.spines.forEach(function(c){c.isEqual(a)||b.push(c)}),b},Teddy.Joint.prototype.isTerminal=function(){return 1===this.spines.length},Teddy.Joint.prototype.isSleeve=function(){return 2===this.spines.length},Teddy.Joint.prototype.isJunction=function(){return 3===this.spines.length},Teddy.Joint.prototype.addTriangle=function(a,b,c){this.triangles.push([a,b,c])},Teddy.Joint.prototype.isNear=function(a){return this.getPoint().distanceTo(a.getPoint())<Teddy.DIST_THRESHOLD},Teddy.Joint.prototype.elevate=function(){if(!this.elevated){this.elevated=!0;var a=[];this.spines.forEach(function(b){b.triangles.forEach(function(b){a.push(b.triangle[0]),a.push(b.triangle[1]),a.push(b.triangle[2])},this)},this),this.triangles.forEach(function(b){a.push(b[0]),a.push(b[1]),a.push(b[2])},this);var b=[];a.forEach(function(a){b.indexOf(a)<0&&this.body.onOutline(a)&&b.push(a)},this);var c=this.getPoint(),d=0;b.forEach(function(a){d+=this.body.points[a].distanceTo(c)},this);var e=d/b.length;this.elevatedPointIndex=this.body.getPointIndex(this.getPoint().clone().setZ(e)),this.droppedPointIndex=this.body.getPointIndex(this.getPoint().clone().setZ(-e)),this.triangles.forEach(function(a){var b=[],c=[];a.forEach(function(a){a===this.pointIndex?(b.push(this.elevatedPointIndex),c.push(this.droppedPointIndex)):(b.push(a),c.push(a))},this),this.elevatedTriangles.push(b),this.droppedTriangles.push(c)},this)}};var Teddy=Teddy||{};Teddy.Storage={},Teddy.Storage.SERIARIZE_VERSION="1",Teddy.Storage.RESERVED_PREFIX="__teddy__",Teddy.Storage.MODELS_KEY=Teddy.Storage.RESERVED_PREFIX+"models",Teddy.Storage.isReservedKey=function(a){return 0===a.indexOf(Teddy.Storage.RESERVED_PREFIX)},Teddy.Storage.addModelName=function(a){var b=JSON.parse(window.localStorage.getItem(Teddy.Storage.MODELS_KEY));b||(b=[]);var c=b.indexOf(a);c>=0&&b.splice(c,1),b.push(a),window.localStorage.setItem(Teddy.Storage.MODELS_KEY,JSON.stringify(b))},Teddy.Storage.setModel=function(a,b){var c=b.map(function(a){return a.userData.teddy.serialize()});c.unshift(Teddy.Storage.SERIARIZE_VERSION),window.localStorage.setItem(a,JSON.stringify(c))},Teddy.Storage.getModels=function(){return JSON.parse(window.localStorage.getItem(Teddy.Storage.MODELS_KEY))||[]},Teddy.Storage.hasModel=function(a){if("undefined"==typeof a)return!1;var b=Teddy.Storage.getModels();return b.indexOf(a)<0},Teddy.Storage.getMesh=function(a,b,c){var d=JSON.parse(window.localStorage.getItem(a));"string"==typeof d[0]&&d.shift();var e=d.length,f=0;d.forEach(function(a){Teddy.Body.deserialize(a,function(a,d){b(a),f++,f>=e&&c(d)})})},Teddy.Storage.clearAll=function(){window.localStorage.clear()};var Teddy=Teddy||{};Teddy.UI={},Teddy.UI.getTextureCanvas=function(a,b){var c=document.getElementById("texture");if(c)return c;c=document.createElement("canvas"),c.id="texture",c.style.position="absolute",c.style.top="-"+b+"px",c.style.left=""+a+"px",c.style.backgroundColor="white",c.width=a,c.height=b;var d=c.getContext("2d");return d.fillStyle="rgb(255,255,255)",d.fillRect(0,0,a,b),document.body.appendChild(c),c},Teddy.UI.setup=function(a,b,c,d){function e(){return 0===K.length&&K.push([]),K[K.length-1]}function f(a,b){var e=a.target.getBoundingClientRect(),f=a.clientX-e.left,g=a.clientY-e.top;f=f/window.getContentWidth()*2-1,g=2*-(g/window.getContentHeight())+1;var h=new THREE.Vector3(f,g,1);M.unprojectVector(h,c);var i=new THREE.Raycaster(c.position,h.sub(c.position).normalize()),j=i.intersectObjects([d]);1===j.length&&b(j[0])}function g(a){"undefined"==typeof a&&(a=function(a,b,c,d){return 250>a||250>b||250>c||255!==d});for(var b,c=F.getImageData(0,0,C,D),d=[],e=[],f=3,g=0;C>g;g+=f){b=[],e.push(b);for(var i=0;D>i;i+=f){var k=4*(g+i*C),l=c.data;a(l[k],l[k+1],l[k+2],l[k+3])?(d.push([g,i]),b.push({pointId:d.length-1,visited:!1})):b.push({pointId:null,visited:!1})}}var m=h(d,e);m.forEach(function(a){j(a),J=!1,K.push([]),L=[],U=void 0})}function h(a,b){for(var c=b.length,d=b[0].length,e=[],f=0;c>f;f++)for(var g=b[f],h=0;d>h;h++){var j=g[h];null===j.pointId||j.visited||(e.push([]),i(a,b,e.length-1,e,h,f,d,c))}return e}function i(a,b,c,d,e,f,g,h){var j=b[f][e];null===j.pointId||j.visited||(j.visited=!0,d[c].push(a[j.pointId]),e>1&&i(a,b,c,d,e-1,f,g,h),g-2>e&&i(a,b,c,d,e+1,f,g,h),f>1&&i(a,b,c,d,e,f-1,g,h),h-2>f&&i(a,b,c,d,e,f+1,g,h))}function j(a){var b=hull(a,10);if(!(b.length<3)){for(var c=[[(b[b.length-2][0]+b[b.length-1][0]+b[0][0])/3,(b[b.length-2][1]+b[b.length-1][1]+b[0][1])/3],[(b[b.length-1][0]+b[0][0]+b[1][0])/3,(b[b.length-1][1]+b[0][1]+b[1][1])/3]],d=1;d<b.length-2;d++)c.push([(b[d-1][0]+b[d][0]+b[d+1][0])/3,(b[d-1][1]+b[d][1]+b[d+1][1])/3]);c.forEach(function(a){n(new THREE.Vector3(a[0]/C*8-4,8*(D-a[1])/D-4,0))},this)}}function k(){H.position.set(-1e3,-1e3,-1e3),H.rotation.x=0,H.rotation.y=0,H.rotation.z=0,J=!1,d.material.opacity=0}function l(){function b(){d++,c===d&&(t(),L=[],e.active=!1,e.style.zIndex=-1,K=[],B.enabled=!0)}k();var c=K.length,d=0,e=document.getElementById("now-building");e.active=!0,e.style.zIndex=1,K.forEach(function(c){if(0===c.length)return void b();var d=new Teddy.Body(c,W.checked);d.getMeshAsync(function(){I=d.mesh;var b=I.geometry;b.faces.forEach(function(a){var c=b.vertices[a.a],d=b.vertices[a.b],e=b.vertices[a.c];b.faceVertexUvs[0].push([new THREE.Vector2((c.x+4)/8,(c.y+4)/8),new THREE.Vector2((d.x+4)/8,(d.y+4)/8),new THREE.Vector2((e.x+4)/8,(e.y+4)/8)])},this),I.material.map=G,a.add(I)},function(a){K[K.length-1]=[],console.log(a),document.getElementById("alert-dialog").open()},b)},this)}function m(a){document.getElementById("3d").classList.remove("retire");var b=V.lineWidth,c=V.lineColor,d=(a.x+4)/8*C,e=D-(a.y+4)/8*D;"undefined"==typeof U?(U={x:d,y:e},F.fillStyle=c,F.beginPath(),F.arc(d,e,b/2,0,2*Math.PI),F.closePath(),F.fill(),G.needsUpdate=!0):(F.strokeStyle=c,F.lineCap="round",F.lineWidth=b,F.beginPath(),F.moveTo(U.x,U.y),F.lineTo(d,e),F.stroke(),U.x=d,U.y=e,G.needsUpdate=!0)}function n(b){if(0===e().length&&H.position.copy(b).setZ(.2),H.rotation.x+=.05,H.rotation.y+=.025,H.rotation.z+=.0125,0===e().length||.1<e()[e().length-1].distanceTo(b)){for(;2<=e().length;){var c=b.clone().sub(e()[e().length-1]),d=b.clone().sub(e()[e().length-2]),f=Math.acos(c.dot(d)/c.length()/d.length())/Math.PI*180;if(!(1>f))break;a.remove(L.pop()),e().pop()}if(o(b,e()))return!1;if(document.getElementById("3d").classList.remove("retire"),e().push(b),2<=e().length){var g=new THREE.Geometry;g.vertices.push(e()[e().length-1].clone().setZ(.01)),g.vertices.push(e()[e().length-2].clone().setZ(.01));var h=new THREE.Line(g,R);a.add(h),L.push(h)}}return!0}function o(a,b){if(b.length<3)return!1;for(var c=[a,b[b.length-1]],d=1;d<b.length-2;d++)if(p(c,[b[d-1],b[d]]))return!0;return!1}function p(a,b){var c=a[0],d=a[1],e=b[0],f=b[1];if(c.x<e.x&&c.x<f.x&&d.x<e.x&&d.x<f.x)return!1;if(e.x<c.x&&f.x<c.x&&e.x<d.x&&f.x<d.x)return!1;if(c.y<e.y&&c.y<f.y&&d.y<e.y&&d.y<f.y)return!1;if(e.y<c.y&&f.y<c.y&&e.y<d.y&&f.y<d.y)return!1;var g=c.clone().sub(d),h=e.clone().sub(d),i=f.clone().sub(d),j=e.clone().sub(f),k=c.clone().sub(f),l=d.clone().sub(f);return g.cross(h).z*g.cross(i).z<=0&&j.cross(k).z*j.cross(l).z<=0?!0:!1}function q(){var b=[];return a.children.forEach(function(a){a instanceof THREE.Mesh&&!(a.geometry instanceof THREE.PlaneGeometry)&&b.push(a)},this),b}function r(a){A("pen"),U=void 0,H.position.set(-1e3,-1e3,-1e3),J=!1,"undefined"==typeof a&&(document.getElementById("3d").classList.add("retire"),F.fillStyle="rgb(255,255,255)",F.fillRect(0,0,C,D),G.needsUpdate=!0,I=void 0,s(),t()),K=[],L=[],d.material.opacity=1,c.position.set(0,0,8),c.lookAt(0,0,0),B.reset(),B.enabled=!1}function s(){q().forEach(function(b){a.remove(b)})}function t(){var b=[];a.children.forEach(function(a){a instanceof THREE.Line&&b.push(a)},this),b.forEach(function(b){a.remove(b)})}function u(){"undefined"==typeof S?(S=document.createElement("video"),S.style.position="absolute",S.style.top=-D+"px",S.style.left=0,S.style.display="none",document.body.appendChild(S),navigator.getUserMedia({video:!0},function(a){S.src=window.URL.createObjectURL(a),S.autoplay=!0,S.play(),setTimeout(function(){v(S)},3e3)},function(a){console.log(a)})):v(S)}function v(a){var b,c,d,e,f=a.videoWidth,g=a.videoHeight;f>g?(b=(f-g)/2,c=0,d=g,e=g):(b=0,c=(g-f)/2,d=f,e=f),F.drawImage(a,b,c,d,e,0,0,C,D),G.needsUpdate=!0}function w(){F.fillStyle="rgb(255,255,255)",F.rect(0,0,C,D),F.fill(),G.needsUpdate=!0}function x(a){Teddy.Storage.isReservedKey(a)||(Teddy.Storage.setModel(a,q()),Teddy.Storage.addModelName(a))}function y(a){Teddy.Storage.hasModel(a)||(document.getElementById("3d").classList.remove("retire"),Teddy.Storage.getMesh(a,function(a){K.push([]),a.forEach(function(a){n((new THREE.Vector3).copy(a))})},function(a){E.getContext("2d").drawImage(a,0,0),G.needsUpdate=!0,l()}))}function z(){Teddy.Storage.clearAll()}function A(a){T=a,document.querySelector("#pen").setAttribute("selected","pen"===a),document.querySelector("#scissors").setAttribute("selected","scissors"===a)}var B=new THREE.OrbitControls(c);B.enabled=!1;var C=600,D=600,E=Teddy.UI.getTextureCanvas(C,D),F=E.getContext("2d"),G=new THREE.Texture(E);G.needsUpdate=!0,"undefined"==typeof d&&(d=new THREE.Mesh(new THREE.PlaneGeometry(8,8),new THREE.MeshBasicMaterial({color:16777215,transparent:!0,map:G})),a.add(d));var H=new THREE.Mesh(new THREE.BoxGeometry(.2,.2,.2),new THREE.MeshLambertMaterial({color:16711680,transparent:!0,opacity:.5}));H.position.set(-1e3,-1e3,-1e3);var I,J=!1,K=[],L=[],M=new THREE.Projector,N=0,O=0,P=0,Q=new THREE.Color(Math.sin(N/180*Math.PI),Math.sin(O/180*Math.PI),Math.sin(P/180*Math.PI)),R=new THREE.LineBasicMaterial({color:Q});!function X(){window.requestAnimationFrame(X),N+=1,O+=2,P+=3,Q.r=Math.sin(N/180*Math.PI),Q.g=Math.sin(O/180*Math.PI),Q.b=Math.sin(P/180*Math.PI),R.color.copy(Q)}(),navigator.getUserMedia=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia;var S,T;A("pen");var U,V={};document.getElementById("pen").addEventListener("click",function(){A("pen"),J=!1,U=void 0}),document.getElementById("scissors").addEventListener("click",function(){A("scissors"),J=!1,K.push([]),L.forEach(function(b){a.remove(b)}),L=[]}),document.getElementById("3d").addEventListener("click",function(){if(0===d.material.opacity)r(!0),A("pen"),J=!1,U=void 0;else{var b=!1;a.children.forEach(function(a){return a instanceof THREE.Line||a instanceof THREE.Mesh&&!(a.geometry instanceof THREE.PlaneGeometry)?void(b=!0):void 0}),b||g(),0!==K.length&&0!==K[K.length-1]?l():(k(),B.enabled=!0)}}),document.querySelector("#confirm-dialog paper-button[affirmative]").addEventListener("click",function(a){a.cancelBubble=!0,r()}),document.getElementById("clear").addEventListener("click",function(){var b=!1;a.children.forEach(function(a){return a instanceof THREE.Mesh&&!(a.geometry instanceof THREE.PlaneGeometry)?void(b=!0):void 0},this),b?document.getElementById("confirm-dialog").open():r()}),document.querySelector("html /deep/ #camera").addEventListener("click",function(){u()}),document.querySelector("html /deep/ #clear-texture").addEventListener("click",function(){w()}),document.querySelector("html /deep/ #download-obj").addEventListener("click",function(){var a=Teddy.zipMeshes(q()),b=a.generate({type:"blob"});saveAs(b,"object.zip")}),document.querySelector("html /deep/ #save-local").addEventListener("click",function(){if(!document.querySelector("core-overlay-layer.core-opened")){var a=document.getElementById("save-local-dialog");a&&a.open()}}),document.querySelector("html /deep/ #load-local").addEventListener("click",function(){if(!document.querySelector("core-overlay-layer.core-opened")){var a=document.querySelector("load-model-dialog");a&&(a.modelNames=Teddy.Storage.getModels(),0!==a.modelNames.length&&a.open())}}),window.addEventListener("keypress",function(b){if(109===b.charCode){var c=q();if(!(2>c)){for(var d=c.map(function(a){return new ThreeBSP(a)}),e=d.pop();0<d.length;)e=e.union(d.pop());var f=e.toMesh(c[0].material);f.geometry.computeVertexNormals(),a.add(f),c.forEach(function(b){a.remove(b)})}}}),document.querySelector("load-model-dialog /deep/ [affirmative]").addEventListener("click",function(){var a=document.querySelector("load-model-dialog /deep/ #local-models");a&&a.selected&&(r(),document.querySelector("core-drawer-panel").selected="main",y(a.selected))}),document.querySelector("html /deep/ #clear-all-local").addEventListener("click",function(){z()}),document.querySelector("html /deep/ #save-local-dialog [affirmative]").addEventListener("click",function(){var a=document.querySelector("html /deep/ #save-local-dialog paper-input");if(a){var b=a.value;""!==b&&x(b)}});var W=document.querySelector("html /deep/ #mesh");W.addEventListener("change",function(){a.children.forEach(function(a){a instanceof THREE.Mesh&&!(a.geometry instanceof THREE.PlaneGeometry)&&(a.material.wireframe=W.checked)},this)}),b.domElement.addEventListener("mouseup",function(){0!==d.material.opacity&&(J=!1,K.push([]),L=[],U=void 0)}),b.domElement.addEventListener("mousedown",function(a){0!==d.material.opacity&&f(a,function(a){J=!0,V.lineWidth=document.querySelector("html /deep/ #line-width").value,V.lineColor=document.querySelector("html /deep/ #line-color").selected,""===V.lineColor&&(V.lineColor="rgb(0,0,255)"),"pen"===T&&m(a.point)})}),b.domElement.addEventListener("mousemove",function(a){0!==d.material.opacity&&J&&f(a,function(a){"pen"===T?m(a.point):"scissors"===T&&(n(a.point)||(J=!1,U=void 0))})}),b.domElement.addEventListener("touchend",function(){0!==d.material.opacity&&(J=!1,K.push([]),L=[],U=void 0)}),b.domElement.addEventListener("touchstart",function(a){0!==d.material.opacity&&f(a.touches[0],function(a){J=!0,V.lineWidth=document.querySelector("html /deep/ #line-width").value,V.lineColor=document.querySelector("html /deep/ #line-color").selected,""===V.lineColor&&(V.lineColor="rgb(0,0,255)"),"pen"===T&&m(a.point)})}),b.domElement.addEventListener("touchmove",function(a){a.preventDefault(),0!==d.material.opacity&&J&&f(a.touches[0],function(a){"pen"===T?m(a.point):"scissors"===T&&(n(a.point)||(J=!1,U=void 0))})}),document.querySelector("settings-panel").addEventListener("mousemove",function(a){a.cancelBubble=!0}),document.querySelector("settings-panel").addEventListener("touchmove",function(a){a.cancelBubble=!0})},Teddy.SERIALIZER_VERSION="0.1",Teddy.Serializer=function(){},Teddy.Serializer.zipMeshes=function(a){var b=new JSZip;a.forEach(function(a,c){var d="mtllib texture.mtl\nusemtl texture\n"+(new THREE.OBJExporter).parse(a.geometry,5);b.file("mesh"+c+".obj",d)},this);var c="newmtl texture\nKa 0.25000 0.25000 0.25000\nKd 1.00000 1.00000 1.00000\nKs 1.00000 1.00000 1.00000\nNs 5.00000\nmap_Kd images/texture.jpg";b.file("texture.mtl",c);var d=Teddy.UI.getTextureCanvas().toDataURL("image/jpeg",1),e=b.folder("images");return e.file("texture.jpg",d.substring("data:image/jpeg;base64,".length),{base64:!0}),b},Teddy.Serializer.prototype.serialize=function(a){var b=this.serializeTexture(a),c=this.serializeContour(a);return{texture:b,contour:c}},Teddy.Serializer.prototype.serializeTexture=function(a){var b=a.mesh.material.map,c=b.image;return c.toDataURL()},Teddy.Serializer.prototype.serializeContour=function(a){var b=[];return a.points.forEach(function(a){b.push([a.x,a.y,a.z])},this),b},Teddy.Serializer.prototype.deserialize=function(a,b){var c=a.contour.map(function(a){return{x:a[0],y:a[1],z:a[2]}},this),d=(new Teddy.Body(a.contour.map(function(a){return new THREE.Vector3(a[0],a[1],a[2])},this)),new Image);d.onload=function(){b(c,d)},d.src=a.texture},Teddy.zipMeshes=Teddy.Serializer.zipMeshes,Teddy.Body.serializer=new Teddy.Serializer,Teddy.Body.prototype.serialize=function(){return Teddy.Body.serializer.serialize(this)},Teddy.Body.deserialize=function(a,b){return Teddy.Body.serializer.deserialize(a,b)},window.addEventListener("polymer-ready",function(){"use strict";var a=document.querySelector("#navicon"),b=document.querySelector("core-drawer-panel");a.addEventListener("click",function(){b.togglePanel()}),main()});